//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Karwos\Documents\Visual Studio 2015\Projects\JFK_PROJEKT\JFK_PROJEKT\DateCalculator.g4 by ANTLR 4.6.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace JFK_PROJEKT {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class DateCalculatorLexer : Lexer {
	public const int
		T__0=1, T__1=2, Add=3, Subtract=4, WhiteSpace=5, NewLine=6, Date=7, Timespan=8;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "SINGLE_SPACE", "TABULATION", "LINE_FEED", "CARRAIGE_RETURN", 
		"DOT", "FRACTION", "Add", "Subtract", "WhiteSpace", "NewLine", "MIESIAC", 
		"Date", "Timespan"
	};


	public DateCalculatorLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'+'", "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, "Add", "Subtract", "WhiteSpace", "NewLine", "Date", 
		"Timespan"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DateCalculator.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\n\xAC\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3"+
		"\a\x3\a\x3\b\x3\b\x3\t\x3\t\a\t\x32\n\t\f\t\xE\t\x35\v\t\x3\t\x3\t\x3"+
		"\n\x3\n\x3\v\x3\v\x3\f\x3\f\x6\f?\n\f\r\f\xE\f@\x3\f\x3\f\x3\r\x3\r\x6"+
		"\rG\n\r\r\r\xE\rH\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3"+
		"\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x5\xEq\n\xE\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF"+
		"\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x5\xF\x91\n\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x5\x10"+
		"\xAB\n\x10\x2\x2\x2\x11\x3\x2\x3\x5\x2\x4\a\x2\x2\t\x2\x2\v\x2\x2\r\x2"+
		"\x2\xF\x2\x2\x11\x2\x2\x13\x2\x5\x15\x2\x6\x17\x2\a\x19\x2\b\x1B\x2\x2"+
		"\x1D\x2\t\x1F\x2\n\x3\x2\b\x3\x2\x32;\x3\x2\x33;\x3\x2\x33\x34\x3\x2\x32"+
		"\x33\x3\x2\x32\x37\x3\x2\x32\x36\xB8\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2"+
		"\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3"+
		"\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x3!\x3\x2\x2\x2\x5#\x3"+
		"\x2\x2\x2\a%\x3\x2\x2\x2\t\'\x3\x2\x2\x2\v)\x3\x2\x2\x2\r+\x3\x2\x2\x2"+
		"\xF-\x3\x2\x2\x2\x11/\x3\x2\x2\x2\x13\x38\x3\x2\x2\x2\x15:\x3\x2\x2\x2"+
		"\x17>\x3\x2\x2\x2\x19\x46\x3\x2\x2\x2\x1Bp\x3\x2\x2\x2\x1D\x90\x3\x2\x2"+
		"\x2\x1F\xAA\x3\x2\x2\x2!\"\a*\x2\x2\"\x4\x3\x2\x2\x2#$\a+\x2\x2$\x6\x3"+
		"\x2\x2\x2%&\a\"\x2\x2&\b\x3\x2\x2\x2\'(\a\v\x2\x2(\n\x3\x2\x2\x2)*\a\f"+
		"\x2\x2*\f\x3\x2\x2\x2+,\a\xF\x2\x2,\xE\x3\x2\x2\x2-.\a\x30\x2\x2.\x10"+
		"\x3\x2\x2\x2/\x33\x5\xF\b\x2\x30\x32\t\x2\x2\x2\x31\x30\x3\x2\x2\x2\x32"+
		"\x35\x3\x2\x2\x2\x33\x31\x3\x2\x2\x2\x33\x34\x3\x2\x2\x2\x34\x36\x3\x2"+
		"\x2\x2\x35\x33\x3\x2\x2\x2\x36\x37\x4\x33;\x2\x37\x12\x3\x2\x2\x2\x38"+
		"\x39\a-\x2\x2\x39\x14\x3\x2\x2\x2:;\a/\x2\x2;\x16\x3\x2\x2\x2<?\x5\a\x4"+
		"\x2=?\x5\t\x5\x2><\x3\x2\x2\x2>=\x3\x2\x2\x2?@\x3\x2\x2\x2@>\x3\x2\x2"+
		"\x2@\x41\x3\x2\x2\x2\x41\x42\x3\x2\x2\x2\x42\x43\b\f\x2\x2\x43\x18\x3"+
		"\x2\x2\x2\x44G\x5\r\a\x2\x45G\x5\v\x6\x2\x46\x44\x3\x2\x2\x2\x46\x45\x3"+
		"\x2\x2\x2GH\x3\x2\x2\x2H\x46\x3\x2\x2\x2HI\x3\x2\x2\x2IJ\x3\x2\x2\x2J"+
		"K\b\r\x2\x2K\x1A\x3\x2\x2\x2LM\aU\x2\x2MN\aV\x2\x2Nq\a[\x2\x2OP\aN\x2"+
		"\x2PQ\aW\x2\x2Qq\aV\x2\x2RS\aO\x2\x2ST\a\x43\x2\x2Tq\aT\x2\x2UV\aM\x2"+
		"\x2VW\aY\x2\x2Wq\aK\x2\x2XY\aO\x2\x2YZ\a\x43\x2\x2Zq\aL\x2\x2[\\\a\x45"+
		"\x2\x2\\]\a\\\x2\x2]q\aG\x2\x2^_\aN\x2\x2_`\aK\x2\x2`q\aR\x2\x2\x61\x62"+
		"\aU\x2\x2\x62\x63\aK\x2\x2\x63q\aG\x2\x2\x64\x65\aY\x2\x2\x65\x66\aT\x2"+
		"\x2\x66q\a\\\x2\x2gh\aR\x2\x2hi\a\x43\x2\x2iq\a\\\x2\x2jk\aN\x2\x2kl\a"+
		"K\x2\x2lq\aU\x2\x2mn\aI\x2\x2no\aT\x2\x2oq\aW\x2\x2pL\x3\x2\x2\x2pO\x3"+
		"\x2\x2\x2pR\x3\x2\x2\x2pU\x3\x2\x2\x2pX\x3\x2\x2\x2p[\x3\x2\x2\x2p^\x3"+
		"\x2\x2\x2p\x61\x3\x2\x2\x2p\x64\x3\x2\x2\x2pg\x3\x2\x2\x2pj\x3\x2\x2\x2"+
		"pm\x3\x2\x2\x2q\x1C\x3\x2\x2\x2rs\a\x32\x2\x2st\t\x3\x2\x2tu\a/\x2\x2"+
		"uv\x5\x1B\xE\x2vw\a/\x2\x2wx\t\x2\x2\x2xy\t\x2\x2\x2yz\t\x2\x2\x2z{\t"+
		"\x2\x2\x2{\x91\x3\x2\x2\x2|}\t\x4\x2\x2}~\t\x2\x2\x2~\x7F\a/\x2\x2\x7F"+
		"\x80\x5\x1B\xE\x2\x80\x81\a/\x2\x2\x81\x82\t\x2\x2\x2\x82\x83\t\x2\x2"+
		"\x2\x83\x84\t\x2\x2\x2\x84\x85\t\x2\x2\x2\x85\x91\x3\x2\x2\x2\x86\x87"+
		"\a\x35\x2\x2\x87\x88\t\x5\x2\x2\x88\x89\a/\x2\x2\x89\x8A\x5\x1B\xE\x2"+
		"\x8A\x8B\a/\x2\x2\x8B\x8C\t\x2\x2\x2\x8C\x8D\t\x2\x2\x2\x8D\x8E\t\x2\x2"+
		"\x2\x8E\x8F\t\x2\x2\x2\x8F\x91\x3\x2\x2\x2\x90r\x3\x2\x2\x2\x90|\x3\x2"+
		"\x2\x2\x90\x86\x3\x2\x2\x2\x91\x1E\x3\x2\x2\x2\x92\x93\a\x32\x2\x2\x93"+
		"\x94\t\x2\x2\x2\x94\x95\a<\x2\x2\x95\x96\t\x6\x2\x2\x96\x97\t\x2\x2\x2"+
		"\x97\x98\a<\x2\x2\x98\x99\t\x6\x2\x2\x99\xAB\t\x2\x2\x2\x9A\x9B\a\x33"+
		"\x2\x2\x9B\x9C\t\x2\x2\x2\x9C\x9D\a<\x2\x2\x9D\x9E\t\x6\x2\x2\x9E\x9F"+
		"\t\x2\x2\x2\x9F\xA0\a<\x2\x2\xA0\xA1\t\x6\x2\x2\xA1\xAB\t\x2\x2\x2\xA2"+
		"\xA3\a\x34\x2\x2\xA3\xA4\t\a\x2\x2\xA4\xA5\a<\x2\x2\xA5\xA6\t\x6\x2\x2"+
		"\xA6\xA7\t\x2\x2\x2\xA7\xA8\a<\x2\x2\xA8\xA9\t\x6\x2\x2\xA9\xAB\t\x2\x2"+
		"\x2\xAA\x92\x3\x2\x2\x2\xAA\x9A\x3\x2\x2\x2\xAA\xA2\x3\x2\x2\x2\xAB \x3"+
		"\x2\x2\x2\v\x2\x33>@\x46Hp\x90\xAA\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace JFK_PROJEKT
