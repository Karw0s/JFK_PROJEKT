//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Karwos\Documents\Visual Studio 2015\Projects\JFK_PROJEKT\JFK_PROJEKT\DateCalculator.g4 by ANTLR 4.6.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace JFK_PROJEKT {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class DateCalculatorLexer : Lexer {
	public const int
		T__0=1, T__1=2, Add=3, Subtract=4, Slash=5, WhiteSpace=6, NewLine=7, Date=8, 
		Timespan=9;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "SINGLE_SPACE", "TABULATION", "LINE_FEED", "CARRAIGE_RETURN", 
		"DOT", "FRACTION", "Add", "Subtract", "Slash", "WhiteSpace", "NewLine", 
		"DZIEN", "MIESIAC", "ROK", "Date", "Timespan"
	};


	public DateCalculatorLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'+'", "'-'", "'/'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, "Add", "Subtract", "Slash", "WhiteSpace", "NewLine", 
		"Date", "Timespan"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DateCalculator.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\v\xA7\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x3\x2\x3\x2\x3\x3\x3\x3"+
		"\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\a\t"+
		"\x38\n\t\f\t\xE\t;\v\t\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3"+
		"\r\x6\rG\n\r\r\r\xE\rH\x3\r\x3\r\x3\xE\x3\xE\x6\xEO\n\xE\r\xE\xE\xEP\x3"+
		"\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x5\xF[\n\xF\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x5\x10\x81\n\x10\x3\x11\x3\x11\x3\x11\x3"+
		"\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3"+
		"\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3"+
		"\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3"+
		"\x13\x3\x13\x5\x13\xA6\n\x13\x2\x2\x2\x14\x3\x2\x3\x5\x2\x4\a\x2\x2\t"+
		"\x2\x2\v\x2\x2\r\x2\x2\xF\x2\x2\x11\x2\x2\x13\x2\x5\x15\x2\x6\x17\x2\a"+
		"\x19\x2\b\x1B\x2\t\x1D\x2\x2\x1F\x2\x2!\x2\x2#\x2\n%\x2\v\x3\x2\b\x3\x2"+
		"\x32;\x3\x2\x33;\x3\x2\x33\x34\x3\x2\x32\x33\x3\x2\x32\x37\x3\x2\x32\x36"+
		"\xB1\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2"+
		"#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x3\'\x3\x2\x2\x2\x5)\x3\x2\x2\x2\a+\x3\x2"+
		"\x2\x2\t-\x3\x2\x2\x2\v/\x3\x2\x2\x2\r\x31\x3\x2\x2\x2\xF\x33\x3\x2\x2"+
		"\x2\x11\x35\x3\x2\x2\x2\x13>\x3\x2\x2\x2\x15@\x3\x2\x2\x2\x17\x42\x3\x2"+
		"\x2\x2\x19\x46\x3\x2\x2\x2\x1BN\x3\x2\x2\x2\x1DZ\x3\x2\x2\x2\x1F\x80\x3"+
		"\x2\x2\x2!\x82\x3\x2\x2\x2#\x87\x3\x2\x2\x2%\xA5\x3\x2\x2\x2\'(\a*\x2"+
		"\x2(\x4\x3\x2\x2\x2)*\a+\x2\x2*\x6\x3\x2\x2\x2+,\a\"\x2\x2,\b\x3\x2\x2"+
		"\x2-.\a\v\x2\x2.\n\x3\x2\x2\x2/\x30\a\f\x2\x2\x30\f\x3\x2\x2\x2\x31\x32"+
		"\a\xF\x2\x2\x32\xE\x3\x2\x2\x2\x33\x34\a\x30\x2\x2\x34\x10\x3\x2\x2\x2"+
		"\x35\x39\x5\xF\b\x2\x36\x38\t\x2\x2\x2\x37\x36\x3\x2\x2\x2\x38;\x3\x2"+
		"\x2\x2\x39\x37\x3\x2\x2\x2\x39:\x3\x2\x2\x2:<\x3\x2\x2\x2;\x39\x3\x2\x2"+
		"\x2<=\x4\x33;\x2=\x12\x3\x2\x2\x2>?\a-\x2\x2?\x14\x3\x2\x2\x2@\x41\a/"+
		"\x2\x2\x41\x16\x3\x2\x2\x2\x42\x43\a\x31\x2\x2\x43\x18\x3\x2\x2\x2\x44"+
		"G\x5\a\x4\x2\x45G\x5\t\x5\x2\x46\x44\x3\x2\x2\x2\x46\x45\x3\x2\x2\x2G"+
		"H\x3\x2\x2\x2H\x46\x3\x2\x2\x2HI\x3\x2\x2\x2IJ\x3\x2\x2\x2JK\b\r\x2\x2"+
		"K\x1A\x3\x2\x2\x2LO\x5\r\a\x2MO\x5\v\x6\x2NL\x3\x2\x2\x2NM\x3\x2\x2\x2"+
		"OP\x3\x2\x2\x2PN\x3\x2\x2\x2PQ\x3\x2\x2\x2QR\x3\x2\x2\x2RS\b\xE\x2\x2"+
		"S\x1C\x3\x2\x2\x2TU\a\x32\x2\x2U[\t\x3\x2\x2VW\t\x4\x2\x2W[\t\x2\x2\x2"+
		"XY\a\x35\x2\x2Y[\t\x5\x2\x2ZT\x3\x2\x2\x2ZV\x3\x2\x2\x2ZX\x3\x2\x2\x2"+
		"[\x1E\x3\x2\x2\x2\\]\aU\x2\x2]^\aV\x2\x2^\x81\a[\x2\x2_`\aN\x2\x2`\x61"+
		"\aW\x2\x2\x61\x81\aV\x2\x2\x62\x63\aO\x2\x2\x63\x64\a\x43\x2\x2\x64\x81"+
		"\aT\x2\x2\x65\x66\aM\x2\x2\x66g\aY\x2\x2g\x81\aK\x2\x2hi\aO\x2\x2ij\a"+
		"\x43\x2\x2j\x81\aL\x2\x2kl\a\x45\x2\x2lm\a\\\x2\x2m\x81\aG\x2\x2no\aN"+
		"\x2\x2op\aK\x2\x2p\x81\aR\x2\x2qr\aU\x2\x2rs\aK\x2\x2s\x81\aG\x2\x2tu"+
		"\aY\x2\x2uv\aT\x2\x2v\x81\a\\\x2\x2wx\aR\x2\x2xy\a\x43\x2\x2y\x81\a\\"+
		"\x2\x2z{\aN\x2\x2{|\aK\x2\x2|\x81\aU\x2\x2}~\aI\x2\x2~\x7F\aT\x2\x2\x7F"+
		"\x81\aW\x2\x2\x80\\\x3\x2\x2\x2\x80_\x3\x2\x2\x2\x80\x62\x3\x2\x2\x2\x80"+
		"\x65\x3\x2\x2\x2\x80h\x3\x2\x2\x2\x80k\x3\x2\x2\x2\x80n\x3\x2\x2\x2\x80"+
		"q\x3\x2\x2\x2\x80t\x3\x2\x2\x2\x80w\x3\x2\x2\x2\x80z\x3\x2\x2\x2\x80}"+
		"\x3\x2\x2\x2\x81 \x3\x2\x2\x2\x82\x83\t\x2\x2\x2\x83\x84\t\x2\x2\x2\x84"+
		"\x85\t\x2\x2\x2\x85\x86\t\x2\x2\x2\x86\"\x3\x2\x2\x2\x87\x88\x5\x1D\xF"+
		"\x2\x88\x89\a/\x2\x2\x89\x8A\x5\x1F\x10\x2\x8A\x8B\a/\x2\x2\x8B\x8C\x5"+
		"!\x11\x2\x8C$\x3\x2\x2\x2\x8D\x8E\a\x32\x2\x2\x8E\x8F\t\x2\x2\x2\x8F\x90"+
		"\a<\x2\x2\x90\x91\t\x6\x2\x2\x91\x92\t\x2\x2\x2\x92\x93\a<\x2\x2\x93\x94"+
		"\t\x6\x2\x2\x94\xA6\t\x2\x2\x2\x95\x96\a\x33\x2\x2\x96\x97\t\x2\x2\x2"+
		"\x97\x98\a<\x2\x2\x98\x99\t\x6\x2\x2\x99\x9A\t\x2\x2\x2\x9A\x9B\a<\x2"+
		"\x2\x9B\x9C\t\x6\x2\x2\x9C\xA6\t\x2\x2\x2\x9D\x9E\a\x34\x2\x2\x9E\x9F"+
		"\t\a\x2\x2\x9F\xA0\a<\x2\x2\xA0\xA1\t\x6\x2\x2\xA1\xA2\t\x2\x2\x2\xA2"+
		"\xA3\a<\x2\x2\xA3\xA4\t\x6\x2\x2\xA4\xA6\t\x2\x2\x2\xA5\x8D\x3\x2\x2\x2"+
		"\xA5\x95\x3\x2\x2\x2\xA5\x9D\x3\x2\x2\x2\xA6&\x3\x2\x2\x2\v\x2\x39\x46"+
		"HNPZ\x80\xA5\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace JFK_PROJEKT
